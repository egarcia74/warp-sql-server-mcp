{
  "name": "warp-sql-server-mcp",
  "version": "1.7.5",
  "description": "Secure MCP server for connecting Warp to SQL Server with graduated safety levels and comprehensive database operations",
  "main": "index.js",
  "type": "module",
  "bin": {
    "warp-sql-server-mcp": "cli.js"
  },
  "scripts": {
    "start": "node index.js",
    "dev": "node --watch index.js",
    "test": "npm run test:unit && npm run test:integration && node scripts/test-summary.js",
    "test:unit": "vitest run test/unit",
    "test:unit:watch": "vitest test/unit",
    "test:integration": "npm run docker:start:init && npm run test:integration:run && npm run docker:stop",
    "test:integration:run": "npm run test:integration:manual && npm run test:integration:protocol && npm run test:integration:performance",
    "test:integration:manual": "MCP_TESTING_MODE=docker node test/integration/manual/phase1-readonly-security.test.js && MCP_TESTING_MODE=docker node test/integration/manual/phase2-dml-operations.test.js && MCP_TESTING_MODE=docker node test/integration/manual/phase3-ddl-operations.test.js",
    "test:integration:protocol": "MCP_TESTING_MODE=docker node test/protocol/mcp-server-startup-test.js",
    "test:integration:performance": "node test/manual/improved-performance-test.js",
    "test:integration:warp": "node test/manual/warp-mcp-performance-test.js",
    "test:integration:aws": "node test/integration/test-aws-secrets.js",
    "test:integration:azure": "node test/integration/test-azure-secrets.js",
    "test:integration:ci": "echo '⚠️  This requires a running SQL Server on localhost:1433 with SA password WarpMCP123!' && npm run test:integration:run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:all": "npm run test",
    "docker:detect": "node test/docker/detect-platform.js",
    "docker:verify": "node test/docker/verify-platform-detection.js",
    "docker:test-connection": "node test/docker/test-connectivity.js",
    "docker:troubleshoot": "node test/docker/troubleshoot-apple-silicon.js",
    "docker:start": "TESTING_MODE=true npm run docker:detect && echo '🐳 Starting optimized SQL Server container...' && docker compose -f test/docker/docker-compose.yml up -d && npm run docker:wait",
    "docker:start:verbose": "npm run docker:detect && echo '🐳 Starting optimized SQL Server container...' && docker compose -f test/docker/docker-compose.yml up -d && npm run docker:wait",
    "docker:start:init": "npm run docker:start && npm run docker:init || (echo '❌ Docker initialization failed - see errors above' && exit 1)",
    "docker:start:verbose:init": "npm run docker:start:verbose && npm run docker:init || (echo '❌ Docker initialization failed - see errors above' && exit 1)",
    "docker:init": "echo '🔧 Initializing database schema...' && docker exec warp-mcp-sqlserver /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P WarpMCP123! -C -b -i /docker-entrypoint-initdb.d/init-db.sql && echo '✅ Database initialization completed successfully' || (echo '❌ Database initialization FAILED - check logs above' && exit 1)",
    "docker:stop": "echo '🔴 Stopping SQL Server container...' && docker compose -f test/docker/docker-compose.yml down",
    "docker:restart": "npm run docker:stop && npm run docker:start",
    "docker:reset": "echo '🔄 Resetting SQL Server container with fresh data...' && npm run docker:clean && npm run docker:start",
    "docker:wait": "node test/docker/wait-for-db.js",
    "docker:logs": "docker logs warp-mcp-sqlserver",
    "docker:shell": "docker exec -it warp-mcp-sqlserver /bin/bash",
    "docker:sql": "docker exec -it warp-mcp-sqlserver /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P WarpMCP123! -C",
    "docker:clean": "docker compose -f test/docker/docker-compose.yml down -v && docker system prune -f",
    "docker:status": "docker ps --filter name=warp-mcp-sqlserver",
    "docker:test": "./scripts/docker-test-runner.sh",
    "docker:test:clean": "./scripts/docker-test-runner.sh --clean",
    "help": "node scripts/help.js",
    "docs:extract": "node scripts/docs/extract-docs.js",
    "docs:generate-tools": "node scripts/docs/generate-tools-html.js",
    "docs:generate-landing": "node scripts/docs/generate-landing-page.js",
    "docs:build": "npm run docs:extract && npm run docs:generate-tools && npm run docs:generate-landing",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write \"**/*.{js,mjs,cjs,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,mjs,cjs,json,md}\"",
    "markdown:lint": "markdownlint-cli2 \"**/*.md\"",
    "markdown:fix": "markdownlint-cli2 --fix \"**/*.md\"",
    "links:check": "find . -name \"*.md\" -not -path \"./node_modules/*\" -exec markdown-link-check {} \\;",
    "links:check:ci": "find . -name \"*.md\" -not -path \"./node_modules/*\" -exec markdown-link-check --config .markdown-link-check.json {} \\;",
    "hooks:install": "./install-git-hooks.sh",
    "hooks:uninstall": "rm -f .git/hooks/*",
    "logs": "./scripts/show-logs.sh server",
    "logs:server": "./scripts/show-logs.sh server",
    "logs:audit": "./scripts/show-logs.sh audit",
    "logs:tail": "./scripts/show-logs.sh server --follow",
    "logs:tail:server": "./scripts/show-logs.sh server --follow",
    "logs:tail:audit": "./scripts/show-logs.sh audit --follow",
    "precommit": "npm run lint && npm run format:check && npm run markdown:lint && npm test",
    "prepush": "npm run precommit && npm run security:audit",
    "ci": "npm run lint && npm run format:check && npm run markdown:lint && npm run links:check:ci && npm run test:coverage && npm run security:audit",
    "security:audit": "npm audit --audit-level=high",
    "audit:fix": "npm audit fix",
    "clean": "rm -rf node_modules coverage .vitest",
    "cleanup": "./scripts/cleanup-test-processes.sh",
    "cleanup:processes": "./scripts/cleanup-test-processes.sh"
  },
  "keywords": [
    "mcp",
    "sql-server",
    "warp",
    "database",
    "security",
    "safety",
    "read-only",
    "enterprise"
  ],
  "author": "Eduardo Garcia-Prieto",
  "license": "MIT",
  "dependencies": {
    "@azure/identity": "^4.11.1",
    "@azure/keyvault-secrets": "^4.10.0",
    "@modelcontextprotocol/sdk": "^1.17.5",
    "aws-sdk": "^2.1692.0",
    "dotenv": "^17.2.1",
    "mssql": "^11.0.1",
    "node-sql-parser": "^5.3.11",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/node": "^24.3.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint": "^9.15.0",
    "eslint-config-prettier": "^10.1.8",
    "markdown-link-check": "^3.13.7",
    "markdownlint-cli2": "^0.18.1",
    "prettier": "^3.3.3",
    "sinon": "^21.0.0",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
